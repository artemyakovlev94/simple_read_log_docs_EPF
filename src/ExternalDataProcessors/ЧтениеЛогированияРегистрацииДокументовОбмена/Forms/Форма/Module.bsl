
#Область ОбработчикиСобытийФормы


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаЛогированияПриИзменении(Элемент)
	ЗагрузитьЗначениеВДеревоЛогирования();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы //<ИмяТаблицыФормы>

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОткрытьЗначение(Команда)

	ТекущиеДанные = Элементы.ДеревоЛогирования.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.Значение);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзЖурнала(Команда)
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗагрузитьИзЖурналаЗавершение", ЭтотОбъект);
	ОткрытьФорму("ВнешняяОбработка.ЧтениеЛогированияРегистрацииДокументовОбмена.Форма.ПолучениеДанныхИзЖР", , 
		ЭтотОбъект, КлючУникальности, , , ОповещениеОЗавершении);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьЗначениеВДеревоЛогирования()

	ЗагрузитьЗначениеВДеревоЛогированияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗначениеВДеревоЛогированияНаСервере()
	
	Дерево = РеквизитФормыВЗначение("ДеревоЛогирования", Тип("ДеревоЗначений"));
	Дерево.Строки.Очистить();
	
	СтрокаЛогирования = СокрЛП(СтрокаЛогирования);
	
	Если ПустаяСтрока(СтрокаЛогирования) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЛогирования = ОбщегоНазначения.ОбщийМодуль("SUI_ОбщегоНазначенияСервер").ДанныеJSON(СтрокаЛогирования);
	
	МодульИнтеграцииСервер = ОбщегоНазначения.ОбщийМодуль("SUI_ИнтеграцияВКонфигурациюСервер");
	МодульИнтеграцииКлиентСервер = ОбщегоНазначения.ОбщийМодуль("SUI_ИнтеграцияВКонфигурациюКлиентСервер");
	
	ДобавитьСтрокиВДерево(ДанныеЛогирования, Дерево, МодульИнтеграцииСервер, МодульИнтеграцииКлиентСервер);
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоЛогирования");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьСтрокиВДерево(Данные, Дерево, МодульИнтеграцииСервер, МодульИнтеграцииКлиентСервер)
	
	ТипДанных = ТипЗнч(Данные);
	
	Если ТипДанных = Тип("Массив") Или ТипДанных = Тип("ФиксированныйМассив") Тогда
		
		Для индекс = 0 По Данные.ВГраница() Цикл
			СтрокаДерева = Дерево.Строки.Добавить();
			СтрокаДерева.Ключ = Формат(индекс, "ЧДЦ=0; ЧН=0; ЧГ=0;");
			ДобавитьСтрокиВДерево(Данные[индекс], СтрокаДерева, МодульИнтеграцииСервер, МодульИнтеграцииКлиентСервер);
		КонецЦикла;
		
	ИначеЕсли ТипДанных = Тип("Структура") Или ТипДанных = Тип("ФиксированнаяСтруктура") Или
		ТипДанных = Тип("Соответствие") Или ТипДанных = Тип("ФиксированноеСоответствие") Тогда
		
		Для Каждого КлючЗначение Из Данные Цикл
			ДобавитьСтрокиВДерево(КлючЗначение, Дерево, МодульИнтеграцииСервер, МодульИнтеграцииКлиентСервер);
		КонецЦикла;
	
	ИначеЕсли ТипДанных = Тип("КлючИЗначение") Тогда
		
		СтрокаДерева = Дерево.Строки.Добавить();
		СтрокаДерева.Ключ = Данные.Ключ;
		ДобавитьСтрокиВДерево(Данные.Значение, СтрокаДерева, МодульИнтеграцииСервер, МодульИнтеграцииКлиентСервер);
			
	Иначе

		Если МодульИнтеграцииКлиентСервер.ЭтоИдентификаторSimple(Данные) Тогда
			Дерево.Значение = МодульИнтеграцииСервер.СсылкаПоИдентификаторуSimple(Данные);
			Если Не ЗначениеЗаполнено(Дерево.Значение) Тогда
				Дерево.Значение = Данные;
			КонецЕсли;
		Иначе
			Дерево.Значение = Данные;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзЖурналаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаЛогирования = "";
	
	Если ЭтоАдресВременногоХранилища(Результат) Тогда
		
		Результат = ПолучитьИзВременногоХранилища(Результат);
		
		Если Результат.Количество() = 1 Тогда
			СтрокаЛогирования = Результат[0];
		ИначеЕсли Результат.Количество() > 1 Тогда
			СтрокаЛогирования = "[" + Символы.ПС + СтрСоединить(Результат, "," + Символы.ПС) + Символы.ПС + "]";
		КонецЕсли;

	КонецЕсли;
	
	ЗагрузитьЗначениеВДеревоЛогирования();
	
КонецПроцедуры

#КонецОбласти
