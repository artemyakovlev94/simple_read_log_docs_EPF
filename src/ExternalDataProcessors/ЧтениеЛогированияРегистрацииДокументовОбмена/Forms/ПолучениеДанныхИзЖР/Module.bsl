
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаНачала = НачалоДня(ТекущаяДатаСеанса());
	ДатаКонец = КонецДня(ТекущаяДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗагрузитьДанныеЖурнала();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы //<ИмяТаблицыФормы>

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗагрузитьПоОтбору(Команда)
	ЗагрузитьДанныеЖурнала();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	НайденныеСтроки = ДанныеЖурнала.НайтиСтроки(Новый Структура("Пометка", Ложь));
	Для индекс = 0 По НайденныеСтроки.ВГраница() Цикл
		НайденныеСтроки[индекс].Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	НайденныеСтроки = ДанныеЖурнала.НайтиСтроки(Новый Структура("Пометка", Истина));
	Для индекс = 0 По НайденныеСтроки.ВГраница() Цикл
		НайденныеСтроки[индекс].Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть(Команда)
	Закрыть(ДанныеВыбораПриЗакрытии());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьДанныеЖурнала()
	
	ДлительнаяОперация = ЗагрузитьДанныеЖурналаНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗагрузитьДанныеЖурналаЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьДанныеЖурналаНаСервере()

	ОтборЖР = СтруктураОтбораЖР(ДатаНачала, ДатаКонец, Данные);
	
	ДанныеЖурнала.Очистить();
	ТЗДанныеЖурнала = РеквизитФормыВЗначение("ДанныеЖурнала", Тип("ТаблицаЗначений"));
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "SUI_ЖурналРегистрации.ВыгрузитьЖурнал", 
		ОтборЖР, ТЗДанныеЖурнала, ?(КоличествоЗаписей = 0, 100, КоличествоЗаписей));
	
КонецФункции

&НаСервереБезКонтекста
Функция СтруктураОтбораЖР(Знач ДатаНачало, Знач ДатаКонец, Знач Данные)
	
	ИмяСобытия = ОбщегоНазначения.ОбщийМодуль("SUI_ДокументыОбменаКлиентСервер").ИмяСобытия(НСтр("ru = 'Логирование'"));
	
	Если Не ЗначениеЗаполнено(ДатаНачало) Тогда
		ДатаНачало = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаКонец) Тогда
		ДатаКонец = КонецДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Данные) Тогда
		Данные = Неопределено;
	КонецЕсли;

	Возврат ОбщегоНазначения.ОбщийМодуль("SUI_ЖурналРегистрацииВызовСервера").ПараметрыОткрытияЖурналаРегистрации(
		ИмяСобытия, ДатаНачало, ДатаКонец, УровеньЖурналаРегистрации.Информация, , Данные);
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьДанныеЖурналаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.Сообщения) Тогда
		
		Для индекс = 0 По Результат.Сообщения.ВГраница() Цикл
			Результат.Сообщения[индекс].Сообщить();
		КонецЦикла;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.КраткоеПредставлениеОшибки) Тогда
		ПоказатьПредупреждение(, Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ПодробноеПредставлениеОшибки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		ЗагрузитьДанныеЖурналаЗавершениеНаСервере(Результат.АдресРезультата);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеЖурналаЗавершениеНаСервере(АдресХранения)
	
	ТЗДанныеЖурнала = ПолучитьИзВременногоХранилища(АдресХранения);
	ДанныеЖурнала.Загрузить(ТЗДанныеЖурнала);
	
КонецПроцедуры

&НаСервере
Функция ДанныеВыбораПриЗакрытии()
	
	Комментарии =  ДанныеЖурнала.Выгрузить(Новый Структура("Пометка", Истина), "Комментарий").ВыгрузитьКолонку("Комментарий");
	
	Возврат ПоместитьВоВременноеХранилище(Комментарии);
	
КонецФункции

#КонецОбласти
